* {
  box-sizing: border-box;
}

html {
  line-height: 1.6;
}

body {
  margin: 0;
  font-family: "Open Sans";
  background: $dark-color;
  color: $light-color;
}

pre {
  margin-top: 0;
}

.listingblock > .title {
  color: $lightest-color;
}

h1, h2, h3, h4, h5, h6 {
  color: $lightest-color;
}

h1 {
  font-family: Quicksand;
  font-size: 2em;
}

.copyright {
  margin-top: 0.5em;
  text-align: center;
  font-size: 0.7rem;
  color: $lightest-color;
}

a {
  color: #E9F289;
  transition: color 0.5s;
  text-decoration: none;

  &:hover {
    color: $primary-color;
  }
}

.post-content {
  a {
    line-height: 1.1;
    display: inline-block;

    &:hover, &:focus {
      color: #E9F289;
      text-decoration: none;
      outline: none;
      outline: 0;
    }

    &:after {
      display: block;
      content: "";
      border-bottom: solid 1px #E9F289;
      transform: scaleX(0);
      transition: transform 500ms ease-in-out;
      transform-origin: 100% 50%;
    }

    &:hover:after, &:focus:after {
      transform: scaleX(1);
      transform-origin: 0% 50%;
    }
  }
}

// Browsers seem to use a smaller default font-size with monospaced code
// blocks (like 80% of the size of normal text) and that looks pretty bad with
// small inline code-blocks in the middle of normal text (mainly because of
// the very noticeable difference in x-height). This CSS corrects that problem.
code {
  font-family: monospace, monospace;
  font-size: 1em;
  color: rgba($light-color, .8);
}

pre {
  // A larger monospaced block of text (that isn't mixed with normal text)
  // generally looks heavier than normal text with the same font size. For this
  // reason using a smaller monospaced font size makes sense in this situation.
  code {
    font-size: .8em;
  }

  overflow: auto;
}

::selection {
  background: rgba($light-color, .25);
}

::-moz-selection {
  background: rgba($light-color, .25);
}

.prev-next {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  margin-bottom: 1em;
}
